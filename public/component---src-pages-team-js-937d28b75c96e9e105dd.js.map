{"version":3,"file":"component---src-pages-team-js-937d28b75c96e9e105dd.js","mappings":"qJA0CA,IAvCaA,IACX,MAAMC,GAAOC,EAAAA,EAAAA,IAAe,cAS5B,OACE,uBAAKC,UAAU,QACb,uBAAKA,UAAU,gBACZF,EAAKG,YAAYC,OAChB,uBAAKF,UAAU,cACb,yCACC,IACD,qBAAGG,KAAI,cAAUL,EAAKG,YAAYC,QAAWJ,EAAKG,YAAYC,OAC7D,KAGJJ,EAAKG,YAAYG,OAChB,uBAAKJ,UAAU,cACb,yCACA,qBAAGG,KAAI,iBAAYL,EAAKG,YAAYG,QACjCN,EAAKG,YAAYG,SAKzBP,EAAMQ,YACL,uBAAKL,UAAU,mBACb,qBAAGG,KAAML,EAAKG,YAAYK,oBAAqBN,UAAU,UAAzD,e,sECiFV,UA9GaH,IACX,MAAMU,EAAOV,EAAMC,KAAKS,KAAKC,OACvB,MAAEC,GAAUZ,EAAMC,KAClBY,EAAiB,sBAAkBD,EAAME,YAAYC,sBAAwB,uBAA5D,YAAsFH,EAAME,YAAYE,4BAA8B,2BAE7J,OACE,gBAAC,IAAD,CAAQC,UAAU,cAChB,gBAAC,IAAD,CAAKC,MAAM,SAEX,uBAAKf,UAAU,SACb,uBAAKA,UAAU,aACb,uBAAKA,UAAU,6BACb,uBAAKA,UAAU,+CACb,uBAAKgB,wBAAyB,CAAEC,OAAQR,EAAMS,SAE/CT,EAAME,YAAYQ,aACjB,uBAAKnB,UAAU,iEACb,uBAAKoB,IAAKX,EAAME,YAAYI,MAAOf,UAAWU,EAAmBW,IAAKZ,EAAME,YAAYQ,kBAOlG,uBAAKnB,UAAU,aACb,uBAAKA,UAAU,OACZO,EAAKe,QAAOC,GAASA,EAAKC,KAAKb,YAAYc,WAAWC,KAAI,QAAC,KAAEF,GAAH,SACzD,uBAAKG,IAAKH,EAAKI,GAAI5B,UAAU,wBAC3B,uBAAKA,UAAU,wCACZwB,EAAKb,YAAYkB,OAChB,uBAAK7B,UAAU,cACb,uBAAKoB,IAAG,mBAAcI,EAAKb,YAAYI,OAASf,UAAU,iBAAiBqB,IAAKG,EAAKb,YAAYkB,SAGrG,uBAAK7B,UAAU,aACb,sBAAIA,UAAU,aAAawB,EAAKb,YAAYI,OAC5C,qBAAGf,UAAU,oBAAoBwB,EAAKb,YAAYmB,UACjDN,EAAKb,YAAYoB,UAChB,qBAAGC,OAAO,SAAS7B,KAAK,6BAAxB,aAGJ,uBAAKH,UAAU,gBACb,yBAAIwB,EAAKS,gBAMnB,uBAAKjC,UAAU,iBACZO,EAAKe,QAAOC,IAAUA,EAAKC,KAAKb,YAAYc,WAAWC,KAAI,QAAC,KAAEF,GAAH,SAC1D,uBAAKG,IAAKH,EAAKI,GAAI5B,UAAU,wBAC3B,uBAAKA,UAAU,qBACZwB,EAAKb,YAAYkB,OAChB,uBAAK7B,UAAU,cACb,uBAAKoB,IAAG,mBAAcI,EAAKb,YAAYI,OAASf,UAAU,iBAAiBqB,IAAKG,EAAKb,YAAYkB,SAGrG,uBAAK7B,UAAU,aACb,sBAAIA,UAAU,aAAawB,EAAKb,YAAYI,OAC5C,qBAAGf,UAAU,oBAAoBwB,EAAKb,YAAYmB,UACjDN,EAAKb,YAAYoB,UAChB,qBAAGC,OAAO,SAAS7B,KAAK,6BAAxB","sources":["webpack://gatsby-serif-theme/./src/components/Call.js","webpack://gatsby-serif-theme/./src/pages/team.js"],"sourcesContent":["import React from 'react';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nconst Call = props => {\n  const data = useStaticQuery(graphql`\n    query ContactQuery {\n        contactJson {\n          phone\n          email\n          contact_button_link\n        }\n    }\n   `);\n  return (\n    <div className=\"call\">\n      <div className=\"call-box-top\">\n        {data.contactJson.phone && (\n          <div className=\"call-phone\">\n            <strong>Phone: </strong>\n            {' '}\n            <a href={ `tel:${data.contactJson.phone}` }>{data.contactJson.phone}</a>\n            {' '}\n          </div>\n        )}\n        {data.contactJson.email && (\n          <div className=\"call-email\">\n            <strong>Email: </strong>\n            <a href={`mailto:${data.contactJson.email}`}>\n              {data.contactJson.email}\n            </a>\n          </div>\n        )}\n      </div>\n      {props.showButton && (\n        <div className=\"call-box-bottom\">\n          <a href={data.contactJson.contact_button_link} className=\"button\">Contact</a>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Call;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport SEO from '../components/SEO';\nimport Layout from '../components/Layout';\nimport Call from '../components/Call';\n\nconst Team = props => {\n  const team = props.data.team.edges;\n  const { intro } = props.data;\n  const introImageClasses = `intro-image ${intro.frontmatter.intro_image_absolute && 'intro-image-absolute'} ${intro.frontmatter.intro_image_hide_on_mobile && 'intro-image-hide-mobile'}`;\n\n  return (\n    <Layout bodyClass=\"page-teams\">\n      <SEO title=\"Team\" />\n\n      <div className=\"intro\">\n        <div className=\"container\">\n          <div className=\"row justify-content-start\">\n            <div className=\"col-12 col-md-7 col-lg-6 order-2 order-md-1\">\n              <div dangerouslySetInnerHTML={{ __html: intro.html }} />\n            </div>\n            {intro.frontmatter.intro_image && (\n              <div className=\"col-12 col-md-5 col-lg-6 order-1 order-md-2 position-relative\">\n                <img alt={intro.frontmatter.title} className={introImageClasses} src={intro.frontmatter.intro_image} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"row\">\n          {team.filter(edge => (edge.node.frontmatter.promoted)).map(({ node }) => (\n            <div key={node.id} className=\"col-12 col-md-6 mb-2\">\n              <div className=\"team team-summary team-summary-large\">\n                {node.frontmatter.image && (\n                  <div className=\"team-image\">\n                    <img alt={`photo of ${node.frontmatter.title}`} className=\"img-fluid mb-2\" src={node.frontmatter.image} />\n                  </div>\n                )}\n                <div className=\"team-meta\">\n                  <h2 className=\"team-name\">{node.frontmatter.title}</h2>\n                  <p className=\"team-description\">{node.frontmatter.jobtitle}</p>\n                  {node.frontmatter.linkedin && (\n                    <a target=\"_blank\" href=\"{{ .Params.Linkedinurl }}\">LinkedIn</a>\n                  )}\n                </div>\n                <div className=\"team-content\">\n                  <p>{node.excerpt}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className=\"row pt-6 pb-6\">\n          {team.filter(edge => (!edge.node.frontmatter.promoted)).map(({ node }) => (\n            <div key={node.id} className=\"col-12 col-md-6 mb-2\">\n              <div className=\"team team-summary\">\n                {node.frontmatter.image && (\n                  <div className=\"team-image\">\n                    <img alt={`photo of ${node.frontmatter.title}`} className=\"img-fluid mb-2\" src={node.frontmatter.image} />\n                  </div>\n                )}\n                <div className=\"team-meta\">\n                  <h2 className=\"team-name\">{node.frontmatter.title}</h2>\n                  <p className=\"team-description\">{node.frontmatter.jobtitle}</p>\n                  {node.frontmatter.linkedin && (\n                    <a target=\"_blank\" href=\"{{ .Params.Linkedinurl }}\">LinkedIn</a>\n                  )}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query TeamQuery {\n    team: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/team\\/.*/\" } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 1000)\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            promoted\n            image\n            jobtitle\n            linkedinurl\n          }\n        }\n      }\n    }\n    intro: markdownRemark(fileAbsolutePath: {regex: \"/(team.md)/\"}) {\n      html\n      frontmatter {\n        image\n        intro_image\n        intro_image_absolute\n        intro_image_hide_on_mobile\n        title\n      }\n    }\n  }\n`;\n\nexport default Team;\n"],"names":["props","data","useStaticQuery","className","contactJson","phone","href","email","showButton","contact_button_link","team","edges","intro","introImageClasses","frontmatter","intro_image_absolute","intro_image_hide_on_mobile","bodyClass","title","dangerouslySetInnerHTML","__html","html","intro_image","alt","src","filter","edge","node","promoted","map","key","id","image","jobtitle","linkedin","target","excerpt"],"sourceRoot":""}